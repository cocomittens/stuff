{"version":3,"sources":["components/Hashtags.jsx","components/Tweet.jsx","App.js","index.js"],"names":["Hashtags","props","hashtags","className","map","hashtag","idx","psuedoKey","indices","text","Tweet","image","user","tweetURLIdx","indexOf","tweetText","slice","tweetURL","src","alt","href","target","App","inputRef","useRef","React","useState","keyword","setKeyword","tweets","setTweets","useEffect","current","focus","ref","placeholder","onKeyUp","evt","key","fetch","replace","then","result","json","body","statuses","filter","tweetObj","entities","length","concat","apply","value","handleInput","tweet","profile_image_url_https","screen_name","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAceA,EAdE,SAACC,GACd,IAAQC,EAAaD,EAAbC,SAER,OACI,yBAASC,UAAU,cAAnB,SACKD,EAASE,KAAI,SAACC,EAASC,GACpB,IAAMC,EAAS,UAAMF,EAAQG,QAAQ,IAAtB,OAA2BH,EAAQG,QAAQ,IAA3C,OAAgDF,GAE/D,OAAO,sBAAKH,UAAU,UAAf,cAA2CE,EAAQI,OAArBF,SCqBtCG,EA7BD,SAACT,GACX,IACIU,EAGAV,EAHAU,MACAC,EAEAX,EAFAW,KACAH,EACAR,EADAQ,KAGEI,EAAcJ,EAAKK,QAAQ,QAE3BC,EAAYN,EAAKO,MAAM,EAAGH,GAE1BI,EAAWR,EAAKO,MAAMH,GAE5B,OACI,gCACI,yBAASV,UAAU,SAAnB,SACI,qBAAKe,IAAKP,EAAOQ,IAAKP,MAE1B,0BAAST,UAAU,YAAnB,UACI,oBAAGA,UAAU,OAAb,cAAsBS,KACtB,8BACKG,EACD,mBAAGZ,UAAU,OAAOiB,KAAMH,EAAUI,OAAO,QAA3C,SAAoDJ,cCwDzDK,G,MArEH,WACV,IAAMC,EAAWC,iBAAO,MAExB,EAA8BC,IAAMC,SAAS,IAA7C,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,EAA4BH,IAAMC,SAAS,MAA3C,mBAAOG,EAAP,KAAeC,EAAf,KA4BA,OAJAC,qBAAU,WACRR,EAASS,QAAQC,WAIjB,sBAAK9B,UAAU,MAAf,UACE,sBAAKA,UAAU,aAAf,UACE,4CACA,uBACE+B,IAAKX,EACLY,YAAY,oBACZC,QAAS,SAAAC,GAAG,OAjCA,SAACA,GAeJ,UAAZA,EAAIC,IAbLC,MAAM,kBAAoBZ,EAAQa,QAAQ,KAAM,QAC/CC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAG,GACJ,IAAI1C,EAAW0C,EAAKC,SACLC,QAAO,SAAAC,GAAQ,OAAIA,EAASC,SAAS9C,SAAS+C,OAAS,KACvD7C,KAAI,SAAA2C,GAAQ,OAAKA,EAASC,SAAS9C,YAElDA,EAAW,GAAGgD,OAAOC,MAAM,GAAIjD,GAE/B4B,EAAU,CAACc,EAAKC,SAAU3C,OAO5B0B,EAAWS,EAAIhB,OAAO+B,OAeFC,CAAYhB,SAGhC,sBAAKlC,UAAU,eAAf,UACE,mDACC0B,GAAUA,EAAO,GAAGoB,OAAS,GAC5B,cAAC,EAAD,CAAU/C,SAAU2B,EAAO,QAG/B,qBAAK1B,UAAU,aAAf,SACG0B,IACsB,IAArBA,EAAO,GAAGoB,OACR,2CACA,mCACCpB,EAAO,GAAGzB,KAAI,SAACkD,GAAD,OACb,cAAC,EAAD,CAEE3C,MAAO2C,EAAM1C,KAAK2C,wBAClB9C,KAAM6C,EAAM7C,KACZG,KAAM0C,EAAM1C,KAAK4C,aAHZF,EAAMG,iB,MCxD3BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.49cc7694.chunk.js","sourcesContent":["const Hashtags = (props) => {\n    const { hashtags } = props;\n\n    return (\n        <section className='hashtagsect'>\n            {hashtags.map((hashtag, idx) => {\n                const psuedoKey = `${hashtag.indices[0]}${hashtag.indices[1]}${idx}`;\n\n                return <div className='hashtag' key={psuedoKey}>#{hashtag.text}</div>\n            })}\n        </section>\n    )\n}\n\nexport default Hashtags;\n","const Tweet = (props) => {\n    const {\n        image,\n        user,\n        text\n    } = props;\n\n    const tweetURLIdx = text.indexOf('http');\n\n    const tweetText = text.slice(0, tweetURLIdx);\n\n    const tweetURL = text.slice(tweetURLIdx);\n\n    return (\n        <div>\n            <section className='avatar' >\n                <img src={image} alt={user} />\n            </section>\n            <section className='tweetText'>\n                <p className='user'>@{user}</p>\n                <p>\n                    {tweetText}\n                    <a className='link' href={tweetURL} target='blank'>{tweetURL}</a>\n                </p>\n            </section>\n        </div>\n    )\n}\n\nexport default Tweet;\n","import React, { useEffect, useRef } from 'react';\n\n// Components\nimport HashTags from './components/Hashtags';\nimport Tweet from './components/Tweet';\n\n// Styles\nimport './styles/App.scss';\n\nconst App = () => {\n  const inputRef = useRef(null);\n\n  const [keyword, setKeyword] = React.useState('');\n\n  const [tweets, setTweets] = React.useState(null);\n\n  const handleInput = (evt) => {\n    const getTweets = () => {\n      fetch('/search/tweets/' + keyword.replace(/#/g, '%23'))\n      .then(result => result.json())\n      .then(body => {\n        let hashtags = body.statuses\n                      .filter(tweetObj => tweetObj.entities.hashtags.length > 0)\n                      .map(tweetObj =>  tweetObj.entities.hashtags);\n\n        hashtags = [].concat.apply([], hashtags);\n\n        setTweets([body.statuses, hashtags])\n      });\n    };\n\n    if(evt.key === 'Enter') {\n      getTweets()\n    } else {\n      setKeyword(evt.target.value);\n    }\n  };\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  return (\n    <div className='app'>\n      <div className='searchSect'>\n        <h4>Tweet Feed</h4>\n        <input\n          ref={inputRef}\n          placeholder='Search by keyword'\n          onKeyUp={evt => handleInput(evt)}\n        />\n      </div>\n      <div className='hashtagsSect'>\n        <h4>Filter by hashtag</h4>\n        {tweets && tweets[1].length > 0 &&\n          <HashTags hashtags={tweets[1]} />\n        }\n      </div>\n      <div className='tweetsSect'>\n        {tweets && (\n          tweets[0].length === 0\n          ? <p>No results</p>\n          : <>\n            {tweets[0].map((tweet) => (\n              <Tweet\n                key={tweet.id}\n                image={tweet.user.profile_image_url_https}\n                text={tweet.text}\n                user={tweet.user.screen_name}\n              />\n            ))}\n        </>\n      )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Components\nimport App from './App';\n\n// Styles\nimport './styles/Index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}