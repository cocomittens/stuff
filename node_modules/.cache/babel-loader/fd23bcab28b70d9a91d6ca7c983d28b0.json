{"ast":null,"code":"var _jsxFileName = \"/Users/corriestoddard/Downloads/Client Archive.zip (0)/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react'; // Components\n\nimport HashTags from './components/Hashtags';\nimport Tweet from './components/Tweet'; // Styles\n\nimport './styles/App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const inputRef = useRef(null);\n  const [keyword, setKeyword] = React.useState('');\n  const [tweets, setTweets] = React.useState(null);\n\n  const handleInput = evt => {\n    const getTweets = () => {\n      fetch('/search/tweets/' + keyword.replace(/#/g, '%23')).then(result => result.json()).then(body => {\n        let hashtags = body.statuses.filter(tweetObj => tweetObj.entities.hashtags.length > 0).map(tweetObj => tweetObj.entities.hashtags);\n        hashtags = [].concat.apply([], hashtags);\n        setTweets([body.statuses, hashtags]);\n      });\n    };\n\n    if (evt.key === 'Enter') {\n      getTweets();\n    } else {\n      setKeyword(evt.target.value);\n    }\n  };\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweetsSect\",\n      children: tweets && (tweets[0].length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), tweets[0].map(tweet => /*#__PURE__*/_jsxDEV(Tweet, {\n          image: tweet.user.profile_image_url_https,\n          text: tweet.text,\n          user: tweet.user.screen_name\n        }, tweet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidePanel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchSect\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: inputRef,\n          placeholder: \"Search by keyword\",\n          onKeyUp: evt => handleInput(evt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), tweets && tweets[1].length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hashtagsSect\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Filter by hashtag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HashTags, {\n          hashtags: tweets[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"E/JpnkM8nSXj4lbGN9VxQ9YbSb4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/corriestoddard/Downloads/Client Archive.zip (0)/src/App.js"],"names":["React","useEffect","useRef","HashTags","Tweet","App","inputRef","keyword","setKeyword","useState","tweets","setTweets","handleInput","evt","getTweets","fetch","replace","then","result","json","body","hashtags","statuses","filter","tweetObj","entities","length","map","concat","apply","key","target","value","current","focus","tweet","user","profile_image_url_https","text","screen_name","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\n\n// Components\nimport HashTags from './components/Hashtags';\nimport Tweet from './components/Tweet';\n\n// Styles\nimport './styles/App.scss';\n\nconst App = () => {\n  const inputRef = useRef(null);\n\n  const [keyword, setKeyword] = React.useState('');\n\n  const [tweets, setTweets] = React.useState(null);\n\n  const handleInput = (evt) => {\n    const getTweets = () => {\n      fetch('/search/tweets/' + keyword.replace(/#/g, '%23'))\n      .then(result => result.json())\n      .then(body => {\n        let hashtags = body.statuses\n                      .filter(tweetObj => tweetObj.entities.hashtags.length > 0)\n                      .map(tweetObj =>  tweetObj.entities.hashtags);\n\n        hashtags = [].concat.apply([], hashtags);\n\n        setTweets([body.statuses, hashtags])\n      });\n    };\n\n    if(evt.key === 'Enter') {\n      getTweets()\n    } else {\n      setKeyword(evt.target.value);\n    }\n  };\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  return (\n    <div className='app'>\n      <div className='tweetsSect'>\n        \n        {tweets && (\n          tweets[0].length === 0\n          ? <p>No results</p>\n          : <>\n          <h1>Home</h1>\n            {tweets[0].map((tweet) => (\n              <Tweet\n                key={tweet.id}\n                image={tweet.user.profile_image_url_https}\n                text={tweet.text}\n                user={tweet.user.screen_name}\n              />\n            ))}\n        </>\n      )}\n      </div>\n      <div className=\"sidePanel\">\n      <div className='searchSect'>\n        \n        <input\n          ref={inputRef}\n          placeholder='Search by keyword'\n          onKeyUp={evt => handleInput(evt)}\n        />\n      </div>\n      \n        \n        {tweets && tweets[1].length > 0 &&\n        <div className='hashtagsSect'>\n          <h4>Filter by hashtag</h4>\n          <HashTags hashtags={tweets[1]} />\n          </div>\n        }\n     \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}